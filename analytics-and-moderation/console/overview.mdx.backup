---
title: "Social+ Console Overview"
description: "Administrative dashboard for monitoring, moderating, and managing your Social+ applications"
---

# Social+ Console

The Social+ Console is your comprehensive administrative dashboard for managing Social+ applications. Monitor community health, moderate content, manage users, and configure settings through an intuitive web interface.

<Info>
Access the console through your [Social+ Portal](https://portal.amity.co) account by clicking "Go to Console" from your application dashboard.
</Info>

## Core Features

<CardGroup cols={2}>
  <Card title="Content Moderation" icon="shield-check" href="moderation/overview">
    Review flagged content, manage AI moderation, and enforce community guidelines
  </Card>
  <Card title="User Management" icon="users" href="management/user-and-content-management">
    Handle user roles, permissions, and account-level moderation actions
  </Card>
  <Card title="Analytics Dashboard" icon="chart-bar" href="analytics/overview">
    Monitor user engagement, content performance, and community metrics
  </Card>
  <Card title="Application Settings" icon="cog" href="settings">
    Configure API keys, webhooks, security, and platform integrations
  </Card>
</CardGroup>

## Getting Started

<Steps>
  <Step title="Access Console">
    Navigate to your application in [Social+ Portal](https://portal.amity.co) and click "Go to Console"
  </Step>
  <Step title="Get API Key">
    Find your API key under Settings > Security for SDK integration
  </Step>
  <Step title="Configure Moderation">
    Set up content filtering, user roles, and community guidelines
  </Step>
  <Step title="Monitor Activity">
    Review analytics dashboard and moderation queues regularly
  </Step>
</Steps>

## Management Areas

### **Social Management**
- **Communities**: Create and manage community spaces
- **Posts & Comments**: Moderate user-generated content
- **Users**: Handle user accounts, roles, and permissions
- **Analytics**: Track engagement and community health

### **Chat Management**
- **Channels**: Moderate chat channels and conversations
- **Messages**: Review and manage chat content
- **Members**: Control channel membership and permissions
- **Moderation**: Apply chat-specific moderation rules

### **Content Moderation**
- **AI Moderation**: Configure automated content filtering
- **Review Queue**: Process flagged content manually
- **Moderation History**: Track all moderation actions
- **Appeals**: Handle user appeals and disputes

## Key Capabilities

<AccordionGroup>
  <Accordion title="Real-time Monitoring">
    - **Live Activity Feed**: See user actions as they happen
    - **Moderation Alerts**: Get notified of content requiring attention
    - **System Health**: Monitor API usage and performance metrics
    - **User Sessions**: Track active users and engagement patterns
  </Accordion>
  
  <Accordion title="Automated Moderation">
    - **AI Content Detection**: Automatic flagging of inappropriate content
    - **Keyword Filtering**: Custom word filters and blocked terms
    - **Spam Protection**: Intelligent spam detection and prevention
    - **Image Recognition**: Visual content analysis and filtering
  </Accordion>
  
  <Accordion title="Advanced Analytics">
    - **User Metrics**: MAU, DAU, retention, and engagement analytics
    - **Content Analytics**: Post performance, interaction rates, trending topics
    - **Moderation Reports**: Flagging patterns, moderator performance, resolution times
    - **Custom Dashboards**: Create tailored views for specific metrics
  </Accordion>
</AccordionGroup>

## Administrative Roles

<Warning>
**Role Hierarchy**: Different admin roles have different capabilities. Ensure appropriate role assignment for security and workflow efficiency.
</Warning>

| Role | Capabilities | Use Case |
|------|-------------|----------|
| **Super Admin** | Full access to all features and settings | Primary application owner |
| **Admin** | Most features except billing and critical settings | Day-to-day administration |
| **Moderator** | Content and user moderation only | Community management team |
| **Analyst** | Read-only access to analytics and reports | Data analysis and reporting |

## Integration with SDK

The console settings directly impact your SDK behavior:

- **Moderation Rules** configured in console apply to SDK content validation
- **User Roles** and permissions affect SDK feature access
- **API Keys** from console are used for SDK authentication  
- **Webhook Settings** enable real-time event handling

## Best Practices

<Tip>
**Regular Monitoring**: Check your console daily for flagged content, user reports, and system alerts to maintain a healthy community.
</Tip>

- **Set Clear Guidelines**: Configure moderation rules that align with your community standards
- **Train Your Team**: Ensure all administrators understand their role capabilities
- **Monitor Performance**: Regularly review analytics to understand community trends
- **Stay Updated**: Keep track of new features and updates through changelogs

## Quick Access

<CardGroup cols={3}>
  <Card title="Getting Started" icon="play" href="getting-started/overview">
    First-time setup and basic configuration
  </Card>
  <Card title="Moderation Guide" icon="shield" href="moderation/overview">
    Complete guide to content and user moderation
  </Card>
  <Card title="Settings Reference" icon="gear" href="settings">
    Detailed configuration options and integrations
  </Card>
</CardGroup>

## Need Help?

- **Documentation**: Explore detailed guides for each console feature
- **API Reference**: Use [Social+ APIs](../social+-apis-and-services/overview) for programmatic access
- **Support**: Contact support through your Social+ Portal account
